// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pach_OS.Models;

#nullable disable

namespace Pach_OS.Migrations
{
    [DbContext(typeof(Pach_OSContext))]
    partial class Pach_OSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<string>("NomCategoria")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nomCategoria");

                    b.HasKey("IdCategoria")
                        .HasName("PK__categori__CD54BC5A68905BA1");

                    b.ToTable("categorias", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Compra", b =>
                {
                    b.Property<int>("IdCompras")
                        .HasColumnType("int")
                        .HasColumnName("id_compras");

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_compra");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.HasKey("IdCompras")
                        .HasName("PK__compras__59093490D7BBFFB7");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("compras", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.DetallesCompra", b =>
                {
                    b.Property<int>("IdDetallesCompras")
                        .HasColumnType("int")
                        .HasColumnName("id_detalles_compras");

                    b.Property<byte?>("Cantidad")
                        .HasColumnType("tinyint")
                        .HasColumnName("cantidad");

                    b.Property<int?>("ComprasId")
                        .HasColumnType("int")
                        .HasColumnName("compras_id");

                    b.Property<int?>("InsumosId")
                        .HasColumnType("int")
                        .HasColumnName("insumos_id");

                    b.Property<int?>("PrecioInsumo")
                        .HasColumnType("int")
                        .HasColumnName("precio_insumo");

                    b.HasKey("IdDetallesCompras")
                        .HasName("PK__Detalles__8D095AC36C3F477E");

                    b.HasIndex("ComprasId");

                    b.HasIndex("InsumosId");

                    b.ToTable("Detalles_Compras", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalleVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"), 1L, 1);

                    b.Property<int?>("CantVendida")
                        .HasColumnType("int")
                        .HasColumnName("cant_vendida");

                    b.Property<int?>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.Property<int?>("ProductosId")
                        .HasColumnType("int")
                        .HasColumnName("productos_id");

                    b.Property<int?>("TotalPrecio")
                        .HasColumnType("int")
                        .HasColumnName("totalPrecio");

                    b.Property<int?>("VentaId")
                        .HasColumnType("int")
                        .HasColumnName("venta_id");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__detalleV__3C2E445CA143D433");

                    b.HasIndex("ProductosId");

                    b.HasIndex("VentaId");

                    b.ToTable("detalleVentas", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Insumo", b =>
                {
                    b.Property<int>("IdInsumos")
                        .HasColumnType("int")
                        .HasColumnName("id_insumos");

                    b.Property<int?>("CantInsumo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("cant_insumo");

                    b.Property<string>("NomInsumo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nom_insumo");

                    b.Property<int?>("ProveedoresId")
                        .HasColumnType("int")
                        .HasColumnName("proveedores_id");

                    b.Property<string>("TiempoLlegado")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tiempo_llegado");

                    b.HasKey("IdInsumos")
                        .HasName("PK__insumos__B76055AED687714B");

                    b.ToTable("insumos", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Producto", b =>
                {
                    b.Property<int>("IdProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_productos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductos"), 1L, 1);

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Estado")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("estado");

                    b.Property<byte?>("MaximoSabores")
                        .HasColumnType("tinyint")
                        .HasColumnName("maximo_sabores");

                    b.Property<string>("NomProducto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nom_producto");

                    b.Property<int?>("PrecioVenta")
                        .HasColumnType("int")
                        .HasColumnName("precio_venta");

                    b.Property<byte?>("TamanoPizza")
                        .HasColumnType("tinyint")
                        .HasColumnName("tamano_pizza");

                    b.HasKey("IdProductos")
                        .HasName("PK__producto__3804F4FB38FC97EE");

                    b.HasIndex("CategoriaId");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.ProductosInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CantInsumo")
                        .HasColumnType("int")
                        .HasColumnName("cant_insumo");

                    b.Property<int?>("InsumosId")
                        .HasColumnType("int")
                        .HasColumnName("insumosID");

                    b.Property<int?>("ProductosId")
                        .HasColumnType("int")
                        .HasColumnName("productosId");

                    b.HasKey("Id")
                        .HasName("PK__producto__3214EC27EBD61552");

                    b.HasIndex("InsumosId");

                    b.HasIndex("ProductosId");

                    b.ToTable("productos_insumos", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Proveedore", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"), 1L, 1);

                    b.Property<int?>("InsumosId")
                        .HasColumnType("int")
                        .HasColumnName("insumos_id");

                    b.Property<string>("Nit")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nit");

                    b.Property<string>("NomLocal")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nom_local");

                    b.HasKey("IdProveedor")
                        .HasName("PK__proveedo__8D3DFE283F237B5C");

                    b.HasIndex("InsumosId");

                    b.ToTable("proveedores", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Role", b =>
                {
                    b.Property<byte>("IdRol")
                        .HasColumnType("tinyint")
                        .HasColumnName("id_rol");

                    b.Property<string>("NomRol")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nom_rol");

                    b.HasKey("IdRol")
                        .HasName("PK__roles__6ABCB5E0C26F1690");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Apellido")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("apellido");

                    b.Property<string>("Celular")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("celular");

                    b.Property<string>("Contrasena")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("correo");

                    b.Property<string>("Estado")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_entrada")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumDocumento")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("num_documento");

                    b.Property<byte?>("RolId")
                        .HasColumnType("tinyint")
                        .HasColumnName("rol_id");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("tipo_documento");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuarios__4E3E04ADDB368B9D");

                    b.HasIndex("RolId");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Pach_OS.Models.Venta", b =>
                {
                    b.Property<int>("IdVentas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ventas");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVentas"), 1L, 1);

                    b.Property<DateTime?>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_venta")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Pago")
                        .HasColumnType("int")
                        .HasColumnName("pago");

                    b.Property<int?>("PagoDomicilio")
                        .HasColumnType("int")
                        .HasColumnName("pago_domicilio");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("tipo_pago");

                    b.Property<int?>("TotalVenta")
                        .HasColumnType("int")
                        .HasColumnName("total_venta");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("IdVentas")
                        .HasName("PK__ventas__283C869DAE168DF8");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ventas", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pach_OS.Models.Compra", b =>
                {
                    b.HasOne("Pach_OS.Models.Proveedore", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_compras_proveedores");

                    b.HasOne("Pach_OS.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__compras__id_usua__49C3F6B7");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Pach_OS.Models.DetallesCompra", b =>
                {
                    b.HasOne("Pach_OS.Models.Compra", "Compras")
                        .WithMany("DetallesCompras")
                        .HasForeignKey("ComprasId")
                        .HasConstraintName("FK__Detalles___compr__4BAC3F29");

                    b.HasOne("Pach_OS.Models.Insumo", "Insumos")
                        .WithMany("DetallesCompras")
                        .HasForeignKey("InsumosId")
                        .HasConstraintName("FK__Detalles___insum__4CA06362");

                    b.Navigation("Compras");

                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("Pach_OS.Models.DetalleVenta", b =>
                {
                    b.HasOne("Pach_OS.Models.Producto", "Productos")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("ProductosId")
                        .HasConstraintName("FK_detalleVentas_productos");

                    b.HasOne("Pach_OS.Models.Venta", "Venta")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("VentaId")
                        .HasConstraintName("FK__detalleVe__venta__778AC167");

                    b.Navigation("Productos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Pach_OS.Models.Producto", b =>
                {
                    b.HasOne("Pach_OS.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK__productos__categ__4F7CD00D");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Pach_OS.Models.ProductosInsumo", b =>
                {
                    b.HasOne("Pach_OS.Models.Insumo", "Insumos")
                        .WithMany("ProductosInsumos")
                        .HasForeignKey("InsumosId")
                        .HasConstraintName("FK__productos__insum__60A75C0F");

                    b.HasOne("Pach_OS.Models.Producto", "Productos")
                        .WithMany("ProductosInsumos")
                        .HasForeignKey("ProductosId")
                        .HasConstraintName("FK__productos__produ__5FB337D6");

                    b.Navigation("Insumos");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Pach_OS.Models.Proveedore", b =>
                {
                    b.HasOne("Pach_OS.Models.Insumo", "Insumos")
                        .WithMany("Proveedores")
                        .HasForeignKey("InsumosId")
                        .HasConstraintName("FK__proveedor__insum__52593CB8");

                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("Pach_OS.Models.Usuario", b =>
                {
                    b.HasOne("Pach_OS.Models.Role", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK__usuarios__rol_id__534D60F1");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Pach_OS.Models.Venta", b =>
                {
                    b.HasOne("Pach_OS.Models.Usuario", "Usuario")
                        .WithMany("Venta")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__ventas__usuario___7E37BEF6");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Pach_OS.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Pach_OS.Models.Compra", b =>
                {
                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("Pach_OS.Models.Insumo", b =>
                {
                    b.Navigation("DetallesCompras");

                    b.Navigation("ProductosInsumos");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Pach_OS.Models.Producto", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("ProductosInsumos");
                });

            modelBuilder.Entity("Pach_OS.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Pach_OS.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Pach_OS.Models.Usuario", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Pach_OS.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
